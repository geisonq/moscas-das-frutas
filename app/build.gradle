//apply plugin: 'com.android.application'
apply plugin: 'com.android.model.application'

model {
    android {
        compileSdkVersion 23
        buildToolsVersion "23.0.2"

        defaultConfig {
            applicationId "com.geisonquevedo.embrapa"
            minSdkVersion.apiLevel 14
            targetSdkVersion.apiLevel 23
            //versionCode 1
            //versionName "1.0"
        }

        /*
        ndk {
            moduleName = "native"
            cppFlags.add("-I${file(getOpenCVDir())}".toString())
            cppFlags.add("-frtti")
            cppFlags.add("-fexceptions")
            ldLibs.addAll(["log", "opencv_java3"])
            stl    = "gnustl_static"
        }

        android.productFlavors {
            // for detailed abiFilter descriptions, refer to "Supported ABIs" @
            // https://developer.android.com/ndk/guides/abis.html#sa
            create("arm") {
                ndk.abiFilters.add("armeabi")
                ndk.ldFlags.add("-L${file('src/main/jniLibs/armeabi')}".toString())
            }
            create("arm7") {
                ndk.abiFilters.add("armeabi-v7a")
                ndk.ldFlags.add("-L${file('src/main/jniLibs/armeabi-v7a')}".toString())
            }
            create("arm8") {
                ndk.abiFilters.add("arm64-v8a")
                ndk.ldFlags.add("-L${file('src/main/jniLibs/arm64-v8a')}".toString())
            }
        }
        */

        buildTypes {
            release {
                minifyEnabled false
                //proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
                proguardFiles.add(file('proguard-rules.txt'))
            }
        }


    }

}

def getOpenCVDir() {
    Properties properties = new Properties()
    properties.load(new File(rootDir.absolutePath + "/local.properties").newDataInputStream())
    def externalModuleDir = properties.getProperty('opencv.dir', null)
    if (externalModuleDir == null) {
        throw new GradleException(
                "OpenCV location not found. Define location with opencv.dir in the local.properties file!")
    }
    return externalModuleDir
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile project(':libs:opencv')
    compile 'com.android.support:appcompat-v7:23.3.0'
    compile 'com.android.support:design:23.3.0'
    compile 'com.android.support:support-v4:23.3.0'
    compile 'com.github.chrisbanes:PhotoView:1.2.6'
    compile 'com.rarepebble:colorpicker:1.6.0'
}
